/* Tailwind CSS v4 Complete and Corrected Configuration
  This file replaces both your old CSS file and your tailwind.config.js
*/

/* Step 1: Import the core Tailwind CSS styles. */
@import "tailwindcss";

/* Step 2: Define the dark mode strategy to use a class. */
@custom-variant dark (&:where(.dark *));

/*
  Step 3: Define raw CSS variables in the `base` layer.
  This is where your original HSL values live, now wrapped in the hsl() function.
  This keeps your theming variables separate and easy to manage.
*/
@layer base {
  :root {
    --background: hsl(0 0% 100%);
    --foreground: hsl(222.2 84% 4.9%);
    --card: hsl(0 0% 100%);
    --card-foreground: hsl(222.2 84% 4.9%);
    --popover: hsl(0 0% 100%);
    --popover-foreground: hsl(222.2 84% 4.9%);
    --primary: hsl(355 99% 53%);
    --primary-foreground: hsl(0 0% 100%);
    --secondary: hsl(210 40% 96.1%);
    --secondary-foreground: hsl(222.2 47.4% 11.2%);
    --muted: hsl(210 40% 96.1%);
    --muted-foreground: hsl(215.4 16.3% 46.9%);
    --accent: hsl(142 76% 36%);
    --accent-foreground: hsl(0 0% 100%);
    --destructive: hsl(0 84.2% 60.2%);
    --destructive-foreground: hsl(210 40% 98%);
    --border: hsl(214.3 31.8% 91.4%);
    --input: hsl(214.3 31.8% 91.4%);
    --ring: hsl(355 100% 59%);
    --radius: 0.75rem;

    /* Sidebar Light Theme */
    --sidebar-background: hsl(0 0% 98%);
    --sidebar-foreground: hsl(240 5.3% 26.1%);
    --sidebar-primary: hsl(240 5.9% 10%);
    --sidebar-primary-foreground: hsl(0 0% 98%);
    --sidebar-accent: hsl(240 4.8% 95.9%);
    --sidebar-accent-foreground: hsl(240 5.9% 10%);
    --sidebar-border-var: hsl(220 13% 91%); /* Use -var suffix to avoid conflict with theme keyword */
    --sidebar-ring: hsl(217.2 91.2% 59.8%);

    /* Custom Gradients & Shadows */
    --gradient-medical: linear-gradient(135deg, hsl(355.23 99.17% 52.75%), hsl(355 85% 50%));
    --gradient-hero: linear-gradient(135deg, hsl(355 100% 59%), hsl(355 90% 70%));
    --shadow-medical: 0 10px 30px -10px hsl(355 100% 59% / 0.3);
    --shadow-soft: 0 4px 20px -4px hsl(0 0% 0% / 0.1);
  }

  

  /* Base element styles */
  * {
    border-color: var(--border);
  }
  body {
    background-color: var(--background);
    color: var(--foreground);
  }
}

/*
  Step 4: Use `@theme inline` to map your CSS variables to Tailwind's theme.
  This tells Tailwind to generate utilities from your variables without changing them.
  This section replaces your `theme` object from tailwind.config.js.
*/
@theme inline {
  /* Container */
  --container-center: true;
  --container-padding: 2rem;
  --breakpoint-2xl: 1400px;

  /* Colors */
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --color-card: var(--card);
  --color-card-foreground: var(--card-foreground);
  --color-popover: var(--popover);
  --color-popover-foreground: var(--popover-foreground);
  --color-primary: var(--primary);
  --color-primary-foreground: var(--primary-foreground);
  --color-secondary: var(--secondary);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-muted: var(--muted);
  --color-muted-foreground: var(--muted-foreground);
  --color-accent: var(--accent);
  --color-accent-foreground: var(--accent-foreground);
  --color-destructive: var(--destructive);
  --color-destructive-foreground: var(--destructive-foreground);
  --color-border: var(--border);
  --color-input: var(--input);
  --color-ring: var(--ring);
  
  /* Sidebar Colors */
  --color-sidebar: var(--sidebar-background);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-border: var(--sidebar-border-var);
  --color-sidebar-ring: var(--sidebar-ring);

  /* Typography */
  --font-baloo: "Baloo 2", cursive;
  --font-poppins: "Poppins", sans-serif;
  --font-montserrat: "Montserrat", sans-serif;

  /* Border Radius */
  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);

  /* Background Images & Shadows */
  --image-gradient-medical: var(--gradient-medical);
  --image-gradient-hero: var(--gradient-hero);
  --shadow-medical: var(--shadow-medical);
  --shadow-soft: var(--shadow-soft);

  /* Animations */
  --animate-accordion-down: accordion-down 0.2s ease-out;
  --animate-accordion-up: accordion-up 0.2s ease-out;
}

html {
  scroll-behavior: smooth;
}


@layer utility {
  .bg-gradient-medical {
    background-image: linear-gradient(135deg, hsl(355 99% 53%), hsl(355 85% 50%));
  }
  .shadow-medical {
    box-shadow: 0 10px 15px -3px rgba(219, 39, 119, 0.4), 0 4px 6px -2px rgba(219, 39, 119, 0.3);
  }
}
/* .bg-gradient-medical {
  background-image: var(--gradient-medical);
} */

/*
  Step 5: Define Keyframes.
  This replaces the `keyframes` object from your config and the `tailwindcss-animate` plugin.
*/
@keyframes accordion-down {
  from { height: 0; }
  to { height: var(--radix-accordion-content-height); }
}

@keyframes accordion-up {
  from { height: var(--radix-accordion-content-height); }
  to { height: 0; }
}
